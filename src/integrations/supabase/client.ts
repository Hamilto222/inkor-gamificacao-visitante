
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ntachuvjrdmlouejtifh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im50YWNodXZqcmRtbG91ZWp0aWZoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyNjU2ODAsImV4cCI6MjA1Njg0MTY4MH0.u2veoOUH-MftQ8FC0SoSo4DVnagcnxpvoHtpc-PI8_8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// For TypeScript type issues with tables not in the types.ts file,
// we need to use a custom type that extends the Database type
interface CustomMediaMetadata {
  Row: {
    id: string;
    filename: string;
    title: string;
    description: string | null;
    created_at: string;
  };
  Insert: {
    id?: string;
    filename: string;
    title: string;
    description?: string | null;
    created_at?: string;
  };
  Update: {
    id?: string;
    filename?: string;
    title?: string;
    description?: string | null;
    created_at?: string;
  };
}

// Type for posts_feed table
interface PostsFeed {
  Row: {
    id: string;
    titulo: string;
    conteudo: string;
    imagem_url: string | null;
    ativo: boolean;
    data_criacao: string;
  };
  Insert: {
    id?: string;
    titulo: string;
    conteudo: string;
    imagem_url?: string | null;
    ativo?: boolean;
    data_criacao?: string;
  };
  Update: {
    id?: string;
    titulo?: string;
    conteudo?: string;
    imagem_url?: string | null;
    ativo?: boolean;
    data_criacao?: string;
  };
}

// Type for post_grupo table
interface PostGrupo {
  Row: {
    id: string;
    post_id: string;
    grupo_id: string;
  };
  Insert: {
    id?: string;
    post_id: string;
    grupo_id: string;
  };
  Update: {
    id?: string;
    post_id?: string;
    grupo_id?: string;
  };
}

// Type for reacoes_post table
interface ReacoesPost {
  Row: {
    id: string;
    post_id: string;
    matricula: string;
    tipo: string;
    data_criacao: string;
  };
  Insert: {
    id?: string;
    post_id: string;
    matricula: string;
    tipo: string;
    data_criacao?: string;
  };
  Update: {
    id?: string;
    post_id?: string;
    matricula?: string;
    tipo?: string;
    data_criacao?: string;
  };
}

// Type for comentarios_post table
interface ComentariosPost {
  Row: {
    id: string;
    post_id: string;
    matricula: string;
    texto: string;
    data_criacao: string;
  };
  Insert: {
    id?: string;
    post_id: string;
    matricula: string;
    texto: string;
    data_criacao?: string;
  };
  Update: {
    id?: string;
    post_id?: string;
    matricula?: string;
    texto?: string;
    data_criacao?: string;
  };
}

// Type for premios table
interface Premios {
  Row: {
    id: string;
    nome: string;
    descricao: string;
    pontos_necessarios: number;
    quantidade: number;
    imagem_url: string | null;
    ativo: boolean;
    data_criacao: string;
  };
  Insert: {
    id?: string;
    nome: string;
    descricao: string;
    pontos_necessarios: number;
    quantidade?: number;
    imagem_url?: string | null;
    ativo?: boolean;
    data_criacao?: string;
  };
  Update: {
    id?: string;
    nome?: string;
    descricao?: string;
    pontos_necessarios?: number;
    quantidade?: number;
    imagem_url?: string | null;
    ativo?: boolean;
    data_criacao?: string;
  };
}

// Custom type extension to include all custom tables
export type CustomDatabase = Database & {
  public: {
    Tables: {
      media_metadata: CustomMediaMetadata;
      posts_feed: PostsFeed;
      post_grupo: PostGrupo;
      reacoes_post: ReacoesPost;
      comentarios_post: ComentariosPost;
      premios: Premios;
    } & Database['public']['Tables'];
  };
};

export const supabase = createClient<CustomDatabase>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
